show_clock 0
show_clock_interval 10000
resolution 0.2
threads 16
speedup 10.000

define sicklaser ranger
(
  sensor(
    pose [ 0 0 0.1 0 ]
    fov 360
    range [ 0.05 20 ]
    samples 1440
  )
  color "random"
  block( 
    points 4
    point[0] [0 0]
    point[1] [0 1]
    point[2] [1 1]
    point[3] [1 0]
    z [0 0.20]
  )
)

define deadlidar ranger
(
  sensor(
    pose [ 0 0 0.1 0 ]
    fov 360
    range [ 0.00 1.1 ]
    samples 1440
  )
  color "random"
  block( 
    points 4
    point[0] [0 0]
    point[1] [0 1]
    point[2] [1 1]
    point[3] [1 0]
    z [0 0.20]
  )
)

define eyes ranger
(
  sensor(
    pose [ 0 0 0.1 0 ]
    fov 180
    range [ 0.0 6.0 ]
    samples 512
  )
  color "random"
  block( 
    points 4
    point[0] [0 0]
    point[1] [0 1]
    point[2] [1 1]
    point[3] [1 0]
    z [0 0.21]
  )
)



define floorplan model
(
  color "gray30"
  boundary 1

  gui_nose 0
  gui_grid 0
  gui_move 1
  gui_outline 0
  gripper_return 0
  fiducial_return 0
  ranger_return 1.000
  obstacle_return 1
)

floorplan
(
  name "blank"
  size [30.000 30.000 0.800]
  pose [0.000 0.000 0.000 0.000]
  bitmap "rink.png"
)

window
(
  size [1550 1028]
  
# Camera options 
  scale 35.000          
  center [-0.886  -1.257]
  rotate [ 0.000  0.000 ]


# GUI options
  show_data 1
  show_flags 1
  show_blocks 1
  show_clock 1
  show_footprints 1
  show_grid 1
  show_trailarrows 0
  show_trailrise 0
  show_trailfast 0
  show_occupancy 0
)


define agent position
(
  size [1.500 1.200 0.320] # sizes from MobileRobots' web site
  block( 
    points 4
    point[0] [1.50 0.00]
    point[1] [1.50 1.20]
    point[2] [0.00 1.20]
    point[3] [0.00 0.00]
    z [0 0.32]
  )
  # actual size

  localization "odom"
  
  # the pioneer's center of rotation is offset from its center of area
  origin [0.000 0.000 0.000 0.000]

  # draw a nose on the robot so we can see which way it points
  gui_nose 1

  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1.000            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders
  
  sicklaser(
	pose [ 0.000 0.000 -0.200 0.000 ] 
  )

  deadlidar(
	pose [ 0.000 0.000 -0.200 0.000 ] 
  )
  # [ xmin xmax ymin ymax zmin zmax amin amax ]				
  # velocity_bounds [-0.5 0.5 0 0 0 0 -90.0 90.0 ]					
  # acceleration_bounds [-0.5 0.5 0 0 0 0 -90 90.0 ]

)

define human1 position
(
  # actual size
  size [0.4 0.50 0.60] # sizes from MobileRobots' web site

  localization "gps"
  
  # the pioneer's center of rotation is offset from its center of area
  origin [0 0 0 0]

  # draw a nose on the robot so we can see which way it points
  gui_nose 1

  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders


)

define human2 position
(
  # actual size
  size [0.50 0.70 0.60] # sizes from MobileRobots' web site

  localization "gps"
  
  # the pioneer's center of rotation is offset from its center of area
  origin [0 0 0 0]

  # draw a nose on the robot so we can see which way it points
  gui_nose 1


  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders


)


define human3 position
(
  size [0.8 0.8 0.60] # sizes from MobileRobots' web site
  block( 
    points 8
    point[0] [0.14 0.00]
    point[1] [0.39 0.00]
    point[2] [0.57 0.20]
    point[3] [0.57 0.44]
    point[4] [0.39 0.64]
    point[5] [0.14 0.64]
    point[6] [0.00 0.455]
    point[7] [0.00 0.185]
    z [0 0.3]
  )

  localization "gps"


  # the pioneer's center of rotation is offset from its center of area
  origin [0 0 0 0]
    
  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders

)


define human3 position
(
  size [0.8 0.8 0.60] # sizes from MobileRobots' web site
  block( 
    points 8
    point[0] [0.14 0.00]
    point[1] [0.39 0.00]
    point[2] [0.57 0.20]
    point[3] [0.57 0.44]
    point[4] [0.39 0.64]
    point[5] [0.14 0.64]
    point[6] [0.00 0.455]
    point[7] [0.00 0.185]
    z [0 0.3]
  )

  localization "gps"


  # the pioneer's center of rotation is offset from its center of area
  origin [0 0 0 0]
    
  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders



)


define static_obs_1 position
(
  size [0.400 0.800 0.600] # sizes from MobileRobots' web site
  block( 
    points 4
    point[0] [0.40 0.00]
    point[1] [0.40 0.80]
    point[2] [0.00 0.80]
    point[3] [0.00 0.00]
    z [0 0.3]
  )

  localization "gps"


  # the pioneer's center of rotation is offset from its center of area
  origin [0.000 0.000 0.000 0.000]
    
  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1.000            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders

)



define static_obs_2 position
(
  size [0.800 1.000 0.600] # sizes from MobileRobots' web site
  block( 
    points 4
    point[0] [0.80 0.00]
    point[1] [0.80 1.00]
    point[2] [0.00 1.00]
    point[3] [0.00 0.00]
    z [0 0.3]
  )

  localization "gps"


  # the pioneer's center of rotation is offset from its center of area
  origin [0.000 0.000 0.000 0.000]
    
  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1.000            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders

)


define static_obs_3 position
(
  size [1.200 1.000 0.600] # sizes from MobileRobots' web site
  block( 
    points 4
    point[0] [1.20 0.00]
    point[1] [1.20 1.00]
    point[2] [0.00 1.00]
    point[3] [0.00 0.00]
    z [0 0.3]
  )

  localization "gps"


  # the pioneer's center of rotation is offset from its center of area
  origin [0.000 0.000 0.000 0.000]
    
  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1.000            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders

)



agent( pose [10.286 0.457 0.000 180.000]  name "robot_0" color "red")

agent( pose [-3.644 -9.844 0.000 0.000] name "robot_1" color "blue")
agent( pose [-11.187 -0.686 0.000 -30.000] name "robot_2" color "yellow")
agent( pose [-9.746 5.889 0.000 -55.000] name "robot_3" color "black")
#agent( pose [-4.743 9.787 0.000 -60.000] name "robot_4" color "green")
#agent( pose [1.301 11.187 0.000 -85.000] name "robot_5")

#agent( pose [-0.00 8.00 0.00 270.00] name "robot_6")
#agent( pose [2.07 -7.73 0.00 -85.00] name "robot_7")
#agent( pose [4.00 -6.93 0.00 -150.00] name "robot_8")
#agent( pose [5.66 -5.66 0.00 -145.00] name "robot_9")

static_obs_1( pose [ 0.657 7.429 0.000 0.000] )
static_obs_1( pose [ 3.114 -8.657 0.000 0.000] )
static_obs_1( pose [ 5.171 1.114 0.000 0.000] )

static_obs_2( pose [ -8.000 0.000 0.000 0.000] )
#static_obs_2( pose [ 7.000 6.000 0.000 0.000] )
static_obs_2( pose [ -8.000 -8.000 0.000 0.000] )

static_obs_3( pose [ -3.743 2.714 0.000 0.000] )
#static_obs_3( pose [ 7.171 -5.029 0.000 0.000] )
static_obs_3( pose [ -0.286 -2.657 0.000 0.000] )

human1( pose [-8.00 0.00 0.00 0.00]  name "fake_0")
human2( pose [7.73 2.07 0.00 195.00] name "fake_1")
human3( pose [5.66 5.66 0.00 225.00] name "fake_2")
human1( pose [4.00 6.93 0.00 240.00] name "fake_3")
#human2( pose [2.07 7.73 0.00 255.00] name "fake_4")
#human3( pose [-2.07 -7.73 0.00 105.00] name "fake_5")

