show_clock 0
show_clock_interval 10000
resolution 0.02
threads 8
speedup 10

define sicklaser ranger
(
  sensor(
    pose [ 0 0 0.1 0 ]
    fov 270
    range [ 0.05 10 ]
    samples 512
  )
  color "random"
  block( 
    points 4
    point[0] [0 0]
    point[1] [0 1]
    point[2] [1 1]
    point[3] [1 0]
    z [0 0.21]
  )
)

define deadlidar ranger
(
  sensor(
    pose [ 0 0 0.1 0 ]
    fov 360
    range [ 0.00 0.5 ]
    samples 512
  )
  color "random"
  block( 
    points 4
    point[0] [0 0]
    point[1] [0 1]
    point[2] [1 1]
    point[3] [1 0]
    z [0 0.21]
  )
)

define floorplan model
(
  color "gray30"
  boundary 1

  gui_nose 0
  gui_grid 0
  gui_move 1
  gui_outline 0
  gripper_return 0
  fiducial_return 0
  ranger_return 1
  obstacle_return 1
)

floorplan
(
  name "blank"
  size [40.000 40.000 0.800]
  pose [0.000 0.000 0.000 0.000]
  bitmap "testenv4.png"
)

window
(
  size [1550 1550]
  
# Camera options 
  scale 35          
  center [0  0]
  rotate [ 0.000  0.000 ]

# GUI options
  show_data 1
  show_flags 1
  show_blocks 1
  show_clock 1
  show_footprints 0
  show_grid 1
  show_trailarrows 0
  show_trailrise 0
  show_trailfast 0
  show_occupancy 0

)


define agent position
(
  size [0.57 0.64 0.60] # sizes from MobileRobots' web site
  block( 
    points 8
    point[0] [0.14 0.00]
    point[1] [0.39 0.00]
    point[2] [0.57 0.20]
    point[3] [0.57 0.44]
    point[4] [0.39 0.64]
    point[5] [0.14 0.64]
    point[6] [0.00 0.455]
    point[7] [0.00 0.185]
    z [0 0.3]
  )
  # actual size

  localization "odom"
  
  # the pioneer's center of rotation is offset from its center of area
  origin [0 0 0 0]

  # draw a nose on the robot so we can see which way it points
  gui_nose 1

  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders
  
  sicklaser(
	pose [ 0.2 0 -0.3 0 ] 
  )

  deadlidar(
	pose [ 0.0 0 -0.3 0 ] 
  )
  # [ xmin xmax ymin ymax zmin zmax amin amax ]				
  # velocity_bounds [-0.5 0.5 0 0 0 0 -90.0 90.0 ]					
  # acceleration_bounds [-0.5 0.5 0 0 0 0 -90 90.0 ]

)

define human position
(
  size [0.57 0.64 0.60] # sizes from MobileRobots' web site
  block( 
    points 8
    point[0] [0.14 0.00]
    point[1] [0.39 0.00]
    point[2] [0.57 0.20]
    point[3] [0.57 0.44]
    point[4] [0.39 0.64]
    point[5] [0.14 0.64]
    point[6] [0.00 0.455]
    point[7] [0.00 0.185]
    z [0 0.3]
  )
  # actual size

  localization "odom"
  
  # the pioneer's center of rotation is offset from its center of area
  origin [0 0 0 0]

  # draw a nose on the robot so we can see which way it points
  gui_nose 1

  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 1            	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders

)

define obstacle position
(
  color "random"
  ranger_return 1
  obstacle_return 1

)

agent( pose [-7.00 11.50 0.00 180.00])
#agent( pose [-7.00 9.50 0.00 180.00])
agent( pose [-18.00 11.50 0.00 0.00])
#agent( pose [-18.00 9.50 0.00 0.00])
agent( pose [-12.50 17.00 0.00 270.00])
agent( pose [-12.50 4.00 0.00 90.00])


obstacle( pose [12 -9 0.00 0]
  size [0.7 0.7 0.8]
  block(
    points 6
    point[5] [0 0]
    point[4] [0 1]
    point[3] [0.75 1]
    point[2] [1 0.75]
    point[1] [1 0.25]
    point[0] [0.75 0]
    z [0 1]
   )
)

obstacle( pose [16 -7 0.00 0]
  size [0.7 0.7 0.8]
  block(
    points 16
    point[0] [ 0.225 0.000 ]
    point[1] [ 0.208 0.086 ]
    point[2] [ 0.159 0.159 ]
    point[3] [ 0.086 0.208 ]
    point[4] [ 0.000 0.225 ]
    point[5] [ -0.086 0.208 ]
    point[6] [ -0.159 0.159 ]
    point[7] [ -0.208 0.086 ]
    point[8] [ -0.225 0.000 ]
    point[9] [ -0.208 -0.086 ]
    point[10] [ -0.159 -0.159 ]
    point[11] [ -0.086 -0.208 ]
    point[12] [ -0.000 -0.225 ]
    point[13] [ 0.086 -0.208 ]
    point[14] [ 0.159 -0.159 ]
    point[15] [ 0.208 -0.086 ]
    z [0 0.1]
  )
)



obstacle( pose [17 -9 0.00 0]
  size [0.7 0.7 0.8]
  block(
    points 4
    point[0] [ -0.02 -0.077 ]
    point[1] [  0.078 -0.077 ]
    point[2] [  0.078  0.077 ]
    point[3] [ -0.02  0.077 ]
    z [0 0.02 ]
  )
)

obstacle( pose [14 -11 0.00 0]
  size [0.7 0.7 0.8]
  block( points 6
               point[0] [-3 -1.5 ]
               point[1] [-3 0.5 ]
               point[2] [-2 1.5 ]
               point[3] [+2 1.5 ]
               point[4] [+3 0.5 ]
               point[5] [+3 -1.5 ]
               z [0 0.05]
  )
)

obstacle( pose [10 -10 0.00 0]
  size [0.7 0.7 0.8]
  block( points 6
               point[0] [-3 -1.5 ]
               point[1] [-3 0.5 ]
               point[2] [-2 1.5 ]
               point[3] [+2 0.7 ]
               point[4] [+3 0.5 ]
               point[5] [+3 0 ]
               z [0 0.05]
  )
)

obstacle( pose [13 -7 0.00 0]
  size [0.7 0.7 0.8]
  block( points 6
               point[0] [0 -1.5 ]
               point[1] [0 0.5 ]
               point[2] [0.5 -0.5 ]
               point[3] [1 0.4 ]
               point[4] [2 -0.5 ]
               point[5] [0.5 -1 ]
               z [0 0.05]
  )
)
obstacle( pose [10 -7 0.00 0]
  size [0.7 0.7 0.8]
  block( points 5
               point[0] [0 0 ]
               point[1] [0.3 0.5 ]
               point[2] [0 1 ]
               point[3] [0.4 0.7]
               point[4] [0.8 1.2 ]
               point[4] [0.5 0]

               z [0 0.05]
  )
)

obstacle( pose [18 -11 0.00 0]
  size [0.7 0.7 0.8]
  block( points 6
               point[0] [-3 -1.5 ]
               point[1] [-3 0.5 ]
               point[2] [-2 1.5 ]
               point[3] [+2 0.7 ]
               point[4] [+3 0.5 ]
               point[5] [+3 0 ]
               z [0 0.05]
  )
)

obstacle( pose [15 -9 0.00 0]
  size [0.7 0.7 0.8]
  block( points 6
               point[0] [0 -1.5 ]
               point[1] [0 0.5 ]
               point[2] [0.5 -0.5 ]
               point[3] [1 0.4 ]
               point[4] [2 -0.5 ]
               point[5] [0.5 -1 ]
               z [0 0.05]
  )
)

human( pose [-18.00 -10.00 0.00 0.00])
human( pose [-12.50 -4.00 0.00 90.00])
human( pose [-12.50 -16.50 0.00 270.00])
human( pose [-8.50 -10.00 0.00 180.00])

